pipeline {

    agent none

    stages{

        stage('build'){
            agent {

            docker {
                image 'maven:3.6.3-openjdk-16-slim'
                args '-v $HOME/.m2:/root/.m2'
            }
        }
            steps{
            echo 'Compilando worker app ...'
                dir('worker'){
                sh 'mvn compile'
                }
            }
                
        }

        stage('Testing'){
            agent {

            docker {
                image 'maven:3.6.3-openjdk-16-slim'
                args '-v $HOME/.m2:/root/.m2'
            }
        }
            steps{
                echo 'Testing worker app ...'
                dir('worker'){
                sh 'mvn clean test'
                }

            }
                
        }

        stage('Package'){
            agent {

            docker {
                image 'maven:3.6.3-openjdk-16-slim'
                args '-v $HOME/.m2:/root/.m2'
            }
        }
            when{
                    
                    changeset "**/worker/**"
                }
            steps{
                
                echo 'generando binario worker app ...'
                dir('worker'){
                sh 'mvn package -DskipTest'
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true

                }
            }
                
        }


     stage('docker-package'){
            agent any
        steps{
            echo 'Packaging worker app with docker'
                script{                        
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                            def workerImage = docker.build("peterfunk101/worker:v${env.BUILD_ID}", "./worker")
                            workerImage.push()
                            workerImage.push("latest")

                    }
                }

                }
            }    

    }

    
}

    

